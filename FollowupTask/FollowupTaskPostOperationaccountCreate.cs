// <copyright file="FollowupTaskPostOperationaccountCreate.cs" company="">
// Copyright (c) 2023 All Rights Reserved
// </copyright>
// <author></author>
// <date>5/25/2023 2:36:50 PM</date>
// <summary>Implements the FollowupTaskPostOperationaccountCreate Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>

using System;
using System.ServiceModel;
using Microsoft.Xrm.Sdk;

namespace _0523PP_VS_Solution_Plugins.FollowupTask
{

    /// <summary>
    /// FollowupTaskPostOperationaccountCreate Plugin.
    /// </summary>    
    public class FollowupTaskPostOperationaccountCreate: PluginBase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FollowupTaskPostOperationaccountCreate"/> class.
        /// </summary>
        /// <param name="unsecure">Contains public (unsecured) configuration information.</param>
        /// <param name="secure">Contains non-public (secured) configuration information.</param>
        public FollowupTaskPostOperationaccountCreate(string unsecure, string secure)
            : base(typeof(FollowupTaskPostOperationaccountCreate))
        {
            
           // TODO: Implement your custom configuration handling.
        }


        /// <summary>
        /// Main entry point for he business logic that the plug-in is to execute.
        /// </summary>
        /// <param name="localContext">The <see cref="LocalPluginContext"/> which contains the
        /// <see cref="IPluginExecutionContext"/>,
        /// <see cref="IOrganizationService"/>
        /// and <see cref="ITracingService"/>
        /// </param>
        /// <remarks>
        /// </remarks>
        protected override void ExecuteCdsPlugin(ILocalPluginContext localContext)
        {
            if (localContext == null)
            {
                throw new InvalidPluginExecutionException(nameof(localContext));
            }           
            // Obtain the tracing service
            ITracingService tracingService = localContext.TracingService;

            try
            { 
                // Obtain the execution context from the service provider.  
                IPluginExecutionContext context = (IPluginExecutionContext)localContext.PluginExecutionContext;

                // Obtain the organization service reference for web service calls.  
                IOrganizationService currentUserService = localContext.CurrentUserService;

                // ***** Plug-in business logic *****
                // Create a task activity to follow up with the account customer in 7 days. 
                Entity followup = new Entity("task");

                followup["subject"] = "Send e-mail to the new customer.";
                followup["description"] =
                    "Follow up with the customer. Check if there are any new issues that need resolution.";
                followup["scheduledstart"] = DateTime.Now.AddDays(7);
                followup["scheduledend"] = DateTime.Now.AddDays(7);
                followup["category"] = context.PrimaryEntityName;

                // Refer to the account in the task activity.
                if (context.OutputParameters.Contains("id"))
                {
                    Guid regardingobjectid = new Guid(context.OutputParameters["id"].ToString());
                    string regardingobjectidType = "account";

                    followup["regardingobjectid"] =
                    new EntityReference(regardingobjectidType, regardingobjectid);
                }

                // Create the task in Microsoft Dynamics CRM.
                tracingService.Trace("FollowupPlugin: Successfully created the task activity.");
                currentUserService.Create(followup);
            }	
            // Only throw an InvalidPluginExecutionException. Please Refer https://go.microsoft.com/fwlink/?linkid=2153829.
            catch (Exception ex)
            {
                tracingService?.Trace("An error occurred executing Plugin _0523PP_VS_Solution_Plugins.FollowupTask.FollowupTaskPostOperationaccountCreate : {0}", ex.ToString());
                throw new InvalidPluginExecutionException("An error occurred executing Plugin _0523PP_VS_Solution_Plugins.FollowupTask.FollowupTaskPostOperationaccountCreate .", ex);
            }	
        }
    }
}
